<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Papers on Down the wabbit's hole</title><link>https://www.dinudev.com/paper/</link><description>Recent content in Papers on Down the wabbit's hole</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 25 Apr 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://www.dinudev.com/paper/index.xml" rel="self" type="application/rss+xml"/><item><title>Math increases critical thinking skills</title><link>https://www.dinudev.com/paper/math_critical_thinking/</link><pubDate>Sun, 25 Apr 2021 00:00:00 +0000</pubDate><guid>https://www.dinudev.com/paper/math_critical_thinking/</guid><description>Notes: expository teaching: a teacher stands at the front of the class and talks about the subject: exposits the rules provides examples mathematical investigation teaching(MIT): explore a topic in depth make connections between representations stages: entry: understand the task goal setting: pose a specific problem or search for a pattern attack review extension some researchers think critical thinking is an inclination: clear statement of the question seek reasons be well informed stick to the point mathematical thinking: fundamental processes: specializing: trying special cases generalizing: looking for patterns(and relationships ?</description></item><item><title>Reverse Engineering Taxonomy</title><link>https://www.dinudev.com/paper/re_taxonomy/</link><pubDate>Sun, 25 Apr 2021 00:00:00 +0000</pubDate><guid>https://www.dinudev.com/paper/re_taxonomy/</guid><description>Notes: The main scope of this paper is to clarify the terminology used in RE for: forward engineering(fe) reverse engineering(re) redocumentation design recovery restructuring reengineering life-cycle stages: requirements: objectives constrains business rules design: specification of the solution implementation: coding testing delivery forward engineering: to move from higher levels of abstraction to concrete results from design to implementation reverse engineering: term comes from hardware analysis, where dechypering the structure of build products is commonplace in hardware, the point of re is to clone the system in software, the point of re is to gain enough understanding so you can: mantain extend patch discover the internal entities and then relationships between them document the findings branches: redocumentation design recovery restructuring(refactoring): keep the interface and rewrite the internals reengineering: engineer a new system to replace an old one based on old system&amp;rsquo;s requirements coupled with new ones includes re, if no documentation is provided includes fe to take into account new technologies, methods and requirements Objectives of re: cope with complexity generate alternate views recover lost information: changes in large systems tend to not be documented detect side effects: re can provide information that fe does not have access to synthesize higher abstractions facilitate reuse Economics: costs of comprehending(and of repairing misunderstandings) exists, although not perceived as a direct one Observations: do these naming conventions still hold true today?</description></item></channel></rss>