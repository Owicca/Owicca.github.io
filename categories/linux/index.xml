<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Linux on Down the wabbit's hole</title><link>https://www.dinudev.com/categories/linux/</link><description>Recent content in Linux on Down the wabbit's hole</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 26 Jul 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://www.dinudev.com/categories/linux/index.xml" rel="self" type="application/rss+xml"/><item><title>Filesystem Hierarchy Standard</title><link>https://www.dinudev.com/post/fhs/</link><pubDate>Mon, 26 Jul 2021 00:00:00 +0000</pubDate><guid>https://www.dinudev.com/post/fhs/</guid><description>basic concepts: shareable vs unshareable: shareable: stored on one system and used on other systems unshareable: !shareable variable vs static: static: files that do not change without sysadmin intervention(libraries, binaries, documentation, etc) variable: !static static files can be stored on read-only media, and their backup schedules is different than variable files matrix: shareable unshareable static /usr/ /etc/ /opt/ /boot/ variable /var/mail/ /var/run/ /var/spool/news/ /var/lock/ fhs: /: used for system maintenance: boot, recover, restore, repair children: /bin/: binaries for use by all users no subdirectories allowed required children: cat, chgrp, chmod, chow, cp, date, dd, df, dmesg, echo, false, hostname, kill, ln, login, ls, mkdir, mknod, more, mount, mv, ps, pwd, rm, rmdir, sed, sh, stty, su, sync, true, umount, uname, test, [ /boot/: bootloader static files kernel is stored here stores everything required to boot the system everything that is used before the kernel loads user-land apps receives help from /sbin/ binaries boot configuration is stored in /etc/ /dev/: device files /etc/: host-specific configuration files no binaries allowed, only non-executable static files required children: /etc/opt/: configuration files for third-party applications /home/: user home directories storage of user-specific settings, applications, files /lib/: shared libraries and kernel modules repository of shared libraries or kernel modules used by /bin/ and /sbin/ apps required children: /lib/modules/: for kernel modules /lib/cpp/: if a C preprocessor is installed libc.</description></item><item><title>Systemd</title><link>https://www.dinudev.com/post/system/</link><pubDate>Sat, 01 Aug 2020 00:00:00 +0000</pubDate><guid>https://www.dinudev.com/post/system/</guid><description>Reasons why RHEL migrated from Upstart init daemon(RHEL 6) to systemd: faster boot times because targets units startup can be paralelized(systemd-analyze time/systemd-analyze blame) only needed units are started, others are started on demand units use cgroups(linux kernel native) to group, control( ensure all processes of the service are terminated upon service stop) and limit processes started by a service(systemd-cgls) a central logging system(journalctl): for log disk persistence: mkdir /var/log/journal chgrp systemd-journal /var/log/journal chmod 2775 /var/log/journal systemctl restart systemd-journald.</description></item><item><title>Red Hat</title><link>https://www.dinudev.com/post/rh/</link><pubDate>Tue, 07 Jul 2020 00:00:00 +0000</pubDate><guid>https://www.dinudev.com/post/rh/</guid><description>Virtual machines and automated installations: what is kvm(kernel-based virtual machine)? a kernel module that allows compatible processors to run vms() each vm is a regular process each vm has dedicated virtual hardware how do you configure it on a fresh install?: install: # yum install &amp;quot;Virtualization Host&amp;quot; &amp;quot;Virtualization Client&amp;quot;: qemu-kvm: main kvm package libvirt: hypervisor manager as a daemon libvirt-client: virsh and the API that controls vms virt-install virt-manager: GUI virsh virt-top virt-viewer: GUI to connect to vm consoles check for kernel modules: # lsmod | grep kvm: kvm_intel kvm kvm_amd kvm if not enabled # modprobe kvm_intel or # modeprobe kvm_amd enable if not enabled change images location: $ mkdir &amp;lt;path/to/folder&amp;gt; $ su - root # semanage fcontext -a -t virt_image_t &amp;#39;&amp;lt;path/to/folder&amp;gt;(/.</description></item></channel></rss>