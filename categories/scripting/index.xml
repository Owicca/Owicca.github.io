<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Scripting on Down the wabbit&#39;s hole</title>
    <link>https://www.dinudev.com/categories/scripting/</link>
    <description>Recent content in Scripting on Down the wabbit&#39;s hole</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 14 Jun 2020 21:45:00 +0200</lastBuildDate><atom:link href="https://www.dinudev.com/categories/scripting/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Bash</title>
      <link>https://www.dinudev.com/post/bash/</link>
      <pubDate>Sun, 14 Jun 2020 21:45:00 +0200</pubDate>
      
      <guid>https://www.dinudev.com/post/bash/</guid>
      <description>Environment variables:  HISTCONTROL:  don&amp;rsquo;t add to history certain lines options:  ignorespace: don&amp;rsquo;t add lines that start with a space ignoredups: don&amp;rsquo;t add duplicates ignoreboth: ignorespace AND ignoredups      Commands:  shopt:  toggle values of variables controlling shell behaviour:  -s: set option name  histappend: append instead of overwriting history list to file pointed by HISTFILE        Conditions:   -a: file exists</description>
    </item>
    
    <item>
      <title>PowerShell</title>
      <link>https://www.dinudev.com/post/powershell/</link>
      <pubDate>Fri, 10 Apr 2020 07:00:00 +0200</pubDate>
      
      <guid>https://www.dinudev.com/post/powershell/</guid>
      <description>Snap-ins:  ms is moving away from the concept of snapins and more thowards modules structure:  name: PSSnapin files:  one or more dlls 0 or more xml configuration files     they have to be installed and registered to be used control:  Add-PSSnapin Remove-PSSnapin Get-PSSnapin   help for loaded snapins: Get-Command -PSSnapin &amp;lt;snapinname&amp;gt;  Modules:  more self-contained and easier to distribute they dont need registration, ps will look in certain paths when searching for a command ($env:PSModulePath) if a module is not in modulepath you can add it with Import-Module if multiple modules are loaded and have a command with the same name, the last loaded module&amp;rsquo;s command will be called user modules location: $Home\Documents\WindowsPowerShell\Modules  Profiles:  a script that is run on shell init system profiles location: a profile location:  current user, current host:  $PROFILE.</description>
    </item>
    
  </channel>
</rss>
