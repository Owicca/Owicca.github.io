<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Malware Analysis on Down the wabbit&#39;s hole</title>
    <link>https://www.dinudev.com/categories/malware-analysis/</link>
    <description>Recent content in Malware Analysis on Down the wabbit&#39;s hole</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 14 Apr 2020 22:00:00 +0200</lastBuildDate>
    
	<atom:link href="https://www.dinudev.com/categories/malware-analysis/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Sandbox</title>
      <link>https://www.dinudev.com/post/sandbox/</link>
      <pubDate>Tue, 14 Apr 2020 22:00:00 +0200</pubDate>
      
      <guid>https://www.dinudev.com/post/sandbox/</guid>
      <description>Architecture: Goals:  fully open source(gpl 3 compilant) highly scallable and redundant(HA proxies and containers) support windows, linux and macos  Requisites:  backend controller: c#/asp.net core agents: c/c++(rust?) ui: js/react database: mysql or postgresql  Development roadmap:  think of a name:  Wiccan Ocelote   build the backend:  multiple database connections(db HA) multiple backends behind http HA architect a simple db schema add report schema:  static analysis string data disk usage binary data network usage binary data   add login   build agent for windows:  functionality:  system information and status monitor disk writes monitor network writes ultimately monitor api calls send executable and perform static analysis(create report)      </description>
    </item>
    
    <item>
      <title>Malware techniques RE</title>
      <link>https://www.dinudev.com/post/malware_techniques_re/</link>
      <pubDate>Sun, 16 Feb 2020 21:18:00 +0200</pubDate>
      
      <guid>https://www.dinudev.com/post/malware_techniques_re/</guid>
      <description>Smashing the stack:  when you make a call, you push the address to return to onto the stack overwrite that address  empire:   discontinued but a fork is currently mantained by BC Security:
  launchers:
 powershell:    stagers:
 backdoorLnkMacro:  backdoor .lnk on desktop that on click will attempt to download and run an empire agent structure:  xls file new or with data macro to be injected into the xls xml holds data about empire install, this will be hosted on the c2   behaviour:  two-stage macro:  stage 1: vbscript that backdoors all the .</description>
    </item>
    
    <item>
      <title>Malware Related Methodologies</title>
      <link>https://www.dinudev.com/post/malware_related_methodologies/</link>
      <pubDate>Mon, 10 Feb 2020 15:36:00 +0200</pubDate>
      
      <guid>https://www.dinudev.com/post/malware_related_methodologies/</guid>
      <description>Kill chain(structure of the attack):  target identification force dispatch to target,decision and order to attack the target destruction of the target  F2T2EA: (it&amp;rsquo;s a chain, because an interruption at any stage can interrupt the entire process)
 find: identify the target fix: fix the target&amp;rsquo;s location track: monitor the target&amp;rsquo;s movements target: select and appropiate weapon/asset based on the target engage: apply weapon/asset on target asses: evaluate the effects of the attack  Four F&amp;rsquo;s:  find the enemy: locate enemy fix the enemy: pin down with suppressing fire fight the enemy: engage in combat or flank finish the enemy: eliminate all the combatants  Unified kill chain:  initial foothold(compromised system):  reconnaissance weaponization delivery social engineering exploitation persistence defense evasion command &amp;amp; control pivoting   network propagation(internal network): 9.</description>
    </item>
    
  </channel>
</rss>