<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Down the wabbit&#39;s hole</title>
    <link>https://www.dinudev.com/</link>
    <description>Recent content on Down the wabbit&#39;s hole</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 10 Apr 2020 07:00:00 +0200</lastBuildDate>
    
	<atom:link href="https://www.dinudev.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>PowerShell</title>
      <link>https://www.dinudev.com/post/powershell/</link>
      <pubDate>Fri, 10 Apr 2020 07:00:00 +0200</pubDate>
      
      <guid>https://www.dinudev.com/post/powershell/</guid>
      <description>Snap-ins:  ms is moving away from the concept of snapins and more thowards modules structure:  name: PSSnapin files:  one or more dlls 0 or more xml configuration files     they have to be installed and registered to be used control:  Add-PSSnapin Remove-PSSnapin Get-PSSnapin   help for loaded snapins: Get-Command -PSSnapin &amp;lt;snapinname&amp;gt;  Modules:  more self-contained and easier to distribute they dont need registration, ps will look in certain paths when searching for a command ($env:PSModulePath) if a module is not in modulepath you can add it with Import-Module if multiple modules are loaded and have a command with the same name, the last loaded module&amp;rsquo;s command will be called user modules location: $Home\Documents\WindowsPowerShell\Modules  Profiles:  a script that is run on shell init system profiles location: a profile location:  current user, current host: $Home\Documents\WindowsPowerShell\Profile.</description>
    </item>
    
    <item>
      <title>C#</title>
      <link>https://www.dinudev.com/post/csharp/</link>
      <pubDate>Fri, 03 Apr 2020 18:59:00 +0200</pubDate>
      
      <guid>https://www.dinudev.com/post/csharp/</guid>
      <description>General:  expression-bodied members: public string Func(param) =&amp;gt; &amp;quot;result&amp;quot; + param object and collection initializer: new Agent() {Name = &amp;quot;James&amp;quot;, Surname = &amp;quot;Bond&amp;quot;} string interpolation: var str = &amp;quot;string&amp;quot;; $&amp;quot;This is a {string}&amp;quot; using static: public class Cls{public static string staticString = &amp;#34;str&amp;#34;;}using static Cls;Console.WriteLine(staticString)  deconstruction: public static (string, int) Func(string){var rnd = new Random();return (string, rnd.Next());}var (someString, someInt) = Func(&amp;#34;test&amp;#34;);// with types(string someString, int someInts) = Func(&amp;#34;test&amp;#34;);// with discards(\_, someInt) = Func(&amp;#34;test&amp;#34;);  blazor are razor pages running in the browser, a mono runtime compiled to web assembly  Generics:  type safety at compile time without knowing the type beforehand  Representing nullable values: *</description>
    </item>
    
    <item>
      <title>COM</title>
      <link>https://www.dinudev.com/post/com/</link>
      <pubDate>Fri, 03 Apr 2020 18:59:00 +0200</pubDate>
      
      <guid>https://www.dinudev.com/post/com/</guid>
      <description>COM(Component Object Model):  the designers took the best of classical, academic OOP and the best from their experiences, took into account human nature and capitalism although the main focus is encapsulation, not inheritance, COM relies on interface inheritance and much less so on implementation inheritance  </description>
    </item>
    
    <item>
      <title>Math</title>
      <link>https://www.dinudev.com/post/math/</link>
      <pubDate>Tue, 31 Mar 2020 22:53:07 +0300</pubDate>
      
      <guid>https://www.dinudev.com/post/math/</guid>
      <description>General:  along with the basics(numbers and operations with numbers) go for:  ch8 #1 ch9 #1,#2(adition of pair numbers and the geometric interpretation)    Ch1:  operations with numbers relations among numbers properties of the relations among numbers:  addition multiplication inequalities positivity square roots n-th roots   #1 =&amp;gt; Integers:  countable numbers: 1, 2, 3, &amp;hellip;. , n natural numbers(positive integers): 0, 1, 2, 3, &amp;hellip;.</description>
    </item>
    
    <item>
      <title>Classical Music</title>
      <link>https://www.dinudev.com/post/music_classical/</link>
      <pubDate>Sat, 28 Mar 2020 21:49:00 +0200</pubDate>
      
      <guid>https://www.dinudev.com/post/music_classical/</guid>
      <description>   Composer Name Subname     Verdi Requiem    vivaldi four seasons summer III presto   beethoven egmont    beethoven 5th    mussorgsky night on bald mountain    mozart nachtmusik    janacek glagolitic mass    Chopin Etudes and Preludes    Rimsky-Korsakov Scheherazade op.35   gustav holst the planets     </description>
    </item>
    
    <item>
      <title>CCNA Course</title>
      <link>https://www.dinudev.com/post/ccna_curs/</link>
      <pubDate>Tue, 24 Mar 2020 15:04:00 +0200</pubDate>
      
      <guid>https://www.dinudev.com/post/ccna_curs/</guid>
      <description>17/03:  conectiunea intre doua layere diferite se face prin straight cable tipuri de porturi vlan:  access vlan   tipuri vlan:  user vlan(any kind of traffic) default vlan(always vlan1; can&amp;rsquo;t be renamed or deleted) management vlan(interfata cu ip pentru remote management) voice vlan(for voip) native vlan(frames will be forced to be 802.3 instead of 802.1Q)   cate un port pentru fiecare vlan(porturi access) presupune si cate un cablu/port pentru fiecare vlan(ramanem repede fara porturi libere;dezavantaj) frame ethernet 802.</description>
    </item>
    
    <item>
      <title>HTTP 1.1 RFC</title>
      <link>https://www.dinudev.com/post/http11/</link>
      <pubDate>Sun, 22 Mar 2020 19:53:00 +0200</pubDate>
      
      <guid>https://www.dinudev.com/post/http11/</guid>
      <description>Network Working Group R. Fielding Request for Comments: 2068 UC Irvine Category: Standards Track J. Gettys J. Mogul DEC H. Frystyk T. Berners-Lee MIT/LCS January 1997
 Hypertext Transfer Protocol -- HTTP/1.1  Status of this Memo
This document specifies an Internet standards track protocol for the Internet community, and requests discussion and suggestions for improvements. Please refer to the current edition of the &amp;ldquo;Internet Official Protocol Standards&amp;rdquo; (STD 1) for the standardization state and status of this protocol.</description>
    </item>
    
    <item>
      <title>Windows c/cpp Notes</title>
      <link>https://www.dinudev.com/post/windows_c_cpp/</link>
      <pubDate>Mon, 16 Mar 2020 22:34:00 +0200</pubDate>
      
      <guid>https://www.dinudev.com/post/windows_c_cpp/</guid>
      <description>Function Error Handling:  VOID: this function cannot possibly fail BOOL: return 0; test return to see if it&amp;rsquo;s different from FALSE  </description>
    </item>
    
    <item>
      <title>Windows</title>
      <link>https://www.dinudev.com/post/windows/</link>
      <pubDate>Mon, 16 Mar 2020 17:19:00 +0200</pubDate>
      
      <guid>https://www.dinudev.com/post/windows/</guid>
      <description>Major Versions:  XP(2001) 5.1 Vista(2007) 6.0 7(2009) 6.1 8(2012) 6.2 8.1(2013) 6.3 10(2015) 10  Component Object Model(COM):  originally created to enable Office apps to communicate and exchange data between documents (Object Linking and Embedding - OLE) principles:  clients communicate with objects(COM server objects) through interfaces component implementation is loaded dynamically rather than begin statically linked to the client   it tipically refers to a DLL or EXE where the COM classes are implemented  Windows Runtime(WinRT):  platform services aimed particularlly at app developers for Windows Apps(Windows Store Apps) can target multiple device form factors(IoT, phones, tablets, desktops, xbox, hololens) built on top of COM  .</description>
    </item>
    
    <item>
      <title>Random urls</title>
      <link>https://www.dinudev.com/post/random_urls/</link>
      <pubDate>Mon, 09 Mar 2020 15:36:00 +0200</pubDate>
      
      <guid>https://www.dinudev.com/post/random_urls/</guid>
      <description>Urls:  https://www.viewbug.com/member/beamieyoung https://mirelapetcu.com/ tejal mewar https://lindahollinger.photography/ federica molinari http://www.kalua.pl/gallery/collodion-between-two-moons/ https://pattycarroll.com/ https://unix.stackexchange.com/questions/47082/how-to-improve-windows-perfomance-when-running-inside-kvm https://www.linuxtechi.com/create-revert-delete-kvm-virtual-machine-snapshot-virsh-command/ https://dennisnotes.com/note/20180614-ubuntu-18.04-qemu-setup/ http://www.azertech.net/content/windows7-kvm-qemu-qcow2-snapshots https://kerneltalks.com/disk-management/how-to-guide-lvm-snapshot/ http://heim.ifi.uio.no/~trygver/themes/mvc/mvc-index.html  </description>
    </item>
    
    <item>
      <title>Russian</title>
      <link>https://www.dinudev.com/post/russian/</link>
      <pubDate>Sat, 07 Mar 2020 02:02:00 +0200</pubDate>
      
      <guid>https://www.dinudev.com/post/russian/</guid>
      <description>Social media urls:  https://vk.com/ https://ok.ru/ https://mail.ru/ https://www.avito.ru/rossiya  News urls:  https://www.pravdareport.com/ https://meduza.io/ https://www.themoscowtimes.com/ https://tass.ru/ https://russia-insider.com/en  Learning urls:  http://masterrussian.com/ http://www.russianlessons.net/  Random urls:  https://forum.ixbt.com/ https://civitas.ru/forum.php https://www.sql.ru/forum http://www.ourprivate.net/forum/index.php https://forum.privet.com/ https://club443.ru/ https://rsdn.org/ https://russificateforum.com/ https://cooljugator.com/ru/  General Grammar:  End of word consonants are pronounced like their voiceless counterparts:  б п в ф г к д т ж ш з с   Consonants are voiceless when followed by other voiceless consonants and the other way around Plurals are built with infinitive + &amp;lsquo;и&amp;rsquo;/&amp;lsquo;ь&amp;rsquo; &amp;lsquo;что&amp;rsquo; is used for alive objects, and &amp;lsquo;кто&amp;rsquo; for inanimate objects.</description>
    </item>
    
    <item>
      <title>Javascript</title>
      <link>https://www.dinudev.com/post/javascript/</link>
      <pubDate>Mon, 02 Mar 2020 13:14:00 +0200</pubDate>
      
      <guid>https://www.dinudev.com/post/javascript/</guid>
      <description>react:  lifecycle phases + hooks:  mount:  creation: ReactDOM.render() getDefaultProps() / MyComponent.defaultProps getInitialState() / this.state = ... render() children initialization componentDidMount()   update:  shouldComponentUpdate() render() children lifecycle methods componentDidUpdate()   unmount:  componentWillUnmount() children lifecycle methods instance destroyed for gc      prototype:  when objects are created they do not come with the myrad of metadata as inheriting classes in classical oop do, they are buckets of data, key-value pairs how this is resolved:  directly: this will refer to the global object, window(browser)/global(nodejs) as a method: this will refer to the object that the func is a part of explicitly applied:  call: object to be this as first param, and the rest of the params as positional apply: object to be this as first param, and the rest of the params as an array in the second param bind: object to be this as first param   as a constructor    object-literal pattern:  organize code by the behaviour it comprises keeps your code from polluting the global namespace  To read:  https://github.</description>
    </item>
    
    <item>
      <title>RE and Malware RE</title>
      <link>https://www.dinudev.com/post/re_malware_re/</link>
      <pubDate>Mon, 02 Mar 2020 13:14:00 +0200</pubDate>
      
      <guid>https://www.dinudev.com/post/re_malware_re/</guid>
      <description>For reverse engineering:  Practical Reverse Engineering - Bruce Dang Reversing Secrets Engineering - Eldad Eilam The IDA Pro Book - Chris Eagle  For malware analysis and malware techniques:  Practical Malware Analysis - Michael Sikorski, Andrew Honig Malware Analyst&amp;rsquo;s Cookbook - Michael Ligh, Steven Adair, Blake Hartstein, Matthew Richard The Art of Memory Forensics - Michael Hale Ligh, Andrew Case, Jamie Levy, AAron Walters  For programming:  Complete Reference C and Complete Reference C++ NASM Manual Intel Software Developer Manual (http://www.</description>
    </item>
    
    <item>
      <title>Russian Dictionary</title>
      <link>https://www.dinudev.com/post/russian_dictionary/</link>
      <pubDate>Mon, 02 Mar 2020 13:14:00 +0200</pubDate>
      
      <guid>https://www.dinudev.com/post/russian_dictionary/</guid>
      <description>ru_word ru_pronunciacion en_translation ru_plural ru_plural_pronunciacion gender     она ana she      ои on him      они oni they      наше nașie our      оио ano it      него niego his              там tam there      далеко dalieco far away      вот vot here      здесъ zdiesi here      где gdie where is      етот etat this      ест iest eats      едят ediat plural of &amp;ldquo;to eat&amp;rdquo;      ем iem I eat      уже uja already      toже tojă too/also/either      как cac how      это eto to be      у u by/near/at      на na on/for/at      жить jiti to live      сейчас siechas now      теперь tiepieri now/presently      пьёт piot to drink      сказать scazati to say      скажите scajitie tell me      можете mojietie can you/could you      ещё ieșio more/still      раз ras time      почему pociemu why      зная znaia to know      понемаю paniemaiu to understand      говорить gavariti to speak      курить curiti to smoke      ехать ehati to go(by transport)      давать davati to give      звать zvati to call      изучать izuchati to study              мужчина mujshina man      женщина jenshina woman      малъчик malicic a boy      брат brat brother      сестра siestra sister              утро utra morning      день dieni day/afternoon дени dieni m   вечер viecher evening      ночь nocha night   f           добрый утро dobrai utra good morning      добрый день dobrai dieni good afternoon      добрый вечер dobrai viecher good evening      спокойной ночи spacoinai nocha good night/quiet/still              извините iezvienitie excuse me      простите prastitie excuse me/i&amp;rsquo;m sorry      пожалуйста pajalusta your&amp;rsquo;re welcome/don&amp;rsquo;t mention it/please      как дела cac diela how are you doing?</description>
    </item>
    
    <item>
      <title>CRS File Format</title>
      <link>https://www.dinudev.com/post/crs_file_format/</link>
      <pubDate>Sun, 01 Mar 2020 18:32:00 +0200</pubDate>
      
      <guid>https://www.dinudev.com/post/crs_file_format/</guid>
      <description>Goals:  learn about file formats obfuscate files  File format:  encrypt the raw data from the file and write to an image(RAW) compute header items dynamic addresses based on RAW size:  header items addresses should not be linked in any way (if you know one address you should not be able to deduce/compute the others)    </description>
    </item>
    
    <item>
      <title>CPP</title>
      <link>https://www.dinudev.com/post/cpp/</link>
      <pubDate>Sun, 01 Mar 2020 17:27:00 +0200</pubDate>
      
      <guid>https://www.dinudev.com/post/cpp/</guid>
      <description>General:  the public data/function members are your interface put the interface first methods with implementation declared in the class are generated inline at every use, giving a speed boost(no jump to common code), inlined methods do not benefit from the boost if they are larger than 4-5 lines  I/O:  a stream can be in four states:  good(): read/write was successful eof(): internal file pointer is at the end of the line fail(): format error level of error(you should clear() to go back to a good()) bad(): disk error level of error    </description>
    </item>
    
    <item>
      <title>Computer Science</title>
      <link>https://www.dinudev.com/post/cs/</link>
      <pubDate>Sun, 01 Mar 2020 17:22:00 +0200</pubDate>
      
      <guid>https://www.dinudev.com/post/cs/</guid>
      <description>General:  everything that is tedious is error-prone try to design your types so that values are guaranteed to be valid:  hide the representation provide a constructor that creates only valid objects design all member functions to expect valid values and leave only valid values behind when they return   a rule for what constitues an valid values is an invariant types for objects in main memory is the same as formats for files on disk  Interface construction rules:  keep interfaces complete keep interfaces minimal provide constructors support copying(or prohibit it) use types to provide good argument checking identify nonmodifying member functions free all resources in the destructor  Attributes of a program:  should produce the desired results for all legal inputs should give reasonable error messages for all ilegal imputs need not worry about misbehaving hardware need not worry about misbehaving system software is allowed to terminate after finding an error  Approaches to acceptable software:  organize software to minimize errors eliminate most of the errors we made through debugging and testing make sure the remaining errors are not serious  Sources of errors:  Poor specification: if we are not specific of the software functionality we can&amp;rsquo;t asses the &amp;ldquo;dark corners&amp;rdquo; and make sure all cases are handled Incomplete programs: know when you handled all the cases Unexpected arguments Unexpected input Unexpected state Logical Errors: code that simply does not do what is supposed to do  Types of errors:  compile-time:  syntax errors type errors(values assigned to variables of the wrong tipe) non-errors(area(10, -7), a rectangle can&amp;rsquo;t have a negative width, but the pc can&amp;rsquo;t know that)   link-time:  every function in the program must be declared with exactly the same type in every translation unit in which is used every function must be defined exactly once in the program   run-time logic errors  Debugging:  how would i know if the program actually worked correctly?</description>
    </item>
    
    <item>
      <title>Design Patterns</title>
      <link>https://www.dinudev.com/post/design_patterns/</link>
      <pubDate>Fri, 28 Feb 2020 11:35:00 +0200</pubDate>
      
      <guid>https://www.dinudev.com/post/design_patterns/</guid>
      <description>Creational: Factory:  a class that creates other classes when to use:  the object setup requires a high level of complexity generation of different objects is needed based on environment when working with many small objects that share the same properties    Abstract Factory:  to be used when a system needs to be decouple from the way objects are generated the system needs to work with multiple objects  Mixin:  a bucket of reusable functionality(think of traits in php) collect functionality through extension it is argued it creates object pollution it is argued it adds an level of uncertainty regarding the origin of the functions(in large systems)  Properties:  create objects based on a template of an existing object through cloning in js Object.</description>
    </item>
    
    <item>
      <title>Empire Framework Notes</title>
      <link>https://www.dinudev.com/post/empire/</link>
      <pubDate>Wed, 26 Feb 2020 12:37:00 +0200</pubDate>
      
      <guid>https://www.dinudev.com/post/empire/</guid>
      <description>setup:  based on some distro detection techniques, install prerequisites and powershell(.dotnetcore) works with python 2 and/or 3 setup database from setup/setup_database.py:  sqlite3 setup users and passwords:      config:      staging_key text   install_path text   ip_whitelist text   ip_blacklist text   autorun_command text   autorun_data text   rootuser boolean   api_username text   api_password text   api_current_token text   api_permanent_token text   obfuscate integer   obfuscate_command text         agents:      id integer   session_id text   listener text   name text   language text   language_version text   delay integer   jitter real   external_ip text   internal_ip text   username text   high_integrity integer   process_name text   process_id text   hostname text   os_details text   session_key text   nonce text   checkin_time text   lastseen_time text   parent text   children text   servers text   profile text   functions text   kill_date text   working_hours text   lost_limit integer   taskings text   results tex         listeners:      id integer   name text   module text   listener_type text   listener_category text   enabled boolean   options blo         credentials:      id integer   credtype text   domain text   username text   password text   host text   os text   sid text   notes tex         taskings:      id integer   data text   agent text         results:      id integer   data text   agent text         reporting:      id integer   name text   event_type text   message text   time_stamp text   taskID integer         generate a self-signed certificate install python req:  network tools setup tools cryptographic tools iptools(manipulate ipv4/ip6 addresses) pydispatcher(signal dispatching mechanism) web framework(flask/jinja) pe/macho header readers dropbox(api wrapper) pyOpenSSL(openssl wrapper) pyinstaller(make an exe) zlib_wrapper netifaces(portable network interface information) pyminifier(minifier,obfuscator,compressor) xlutils(work with excel files)    architecture:  structure:  listeners:  pivot hop foreign   stagers(.</description>
    </item>
    
    <item>
      <title>Random Notes</title>
      <link>https://www.dinudev.com/post/random_notes/</link>
      <pubDate>Mon, 24 Feb 2020 15:44:00 +0200</pubDate>
      
      <guid>https://www.dinudev.com/post/random_notes/</guid>
      <description>Network upgrade:   Before:
 3.65 dl 1.74 up Connection failed 0.25 dl 0.01 up 0.56 dl 0.00 up 0.12 dl 0.00 up    After
 4.91 dl 6.61 up 10.1 dl 6.09 up 9.08 dl 7.44 up 16.4 dl 7.04 up 11.9 dl 6.03 up    Some algorithm:  get a directory and a hash in directory there can be 0 or more children if there are more than 0 children get the hash keys of the children iterate through the keys truncate the curent key to the hash size and compare them if they are the same, if the child is a file return the file path, if the child is a directory, goroutine recursively else go to the next if no match is found, return nil  How to be as pompous as you can:  only the awake may think seeing is for open eyes cognition is a lie i dream the world awake dreaming is a vestige sleep is pretend a dream is a cowardly thought sleep is not civilized the mind is a tyrant this is your time now i will never dream again stay out of your bedrom there is work to be done dreams are just screaming with pictures the pure of mind do not slumber no good thought follows instinct the lie of sleep seeks many vessels we are our own gods let cognizance nourish itself logic is the final burden the primitive mind deserves its nightmares when we sleep we die i am an idea thinking itself they are no faces the subconscious is a parasite dreaming is a cancer on the face of sleep they follow night to bleed dreams your home has another door unconsciousness is a threat we are not meant to dream you owe the messenger what is true unmakes the false sleep is a scavenger this message will repeat until there are none to read it  Set &amp;ldquo;offline&amp;rdquo; in lol chat:  RADS &amp;gt; Projects &amp;gt; lol_air_client_config_[your server here] &amp;gt; releases &amp;gt; 0.</description>
    </item>
    
    <item>
      <title>Stoicism</title>
      <link>https://www.dinudev.com/post/stoicism/</link>
      <pubDate>Mon, 24 Feb 2020 11:29:00 +0200</pubDate>
      
      <guid>https://www.dinudev.com/post/stoicism/</guid>
      <description>Stages of stoicism:  Early:  Zeno of Citium(founder;330bce):  stoicism comes from the parto of the agora zeno and it&amp;rsquo;s followers would meet and discuss philosophy, Painted Stoa(covered colonnades), first named Zenonians, then named Stoics influenced by cynics, plato, megarian   Aristo of Chios(pupil of zeno):  focused on ethics eavily influenced by the cynics   Cleantes of Assos(turkey):  head of school after Zeno known for a religios ode to Zeus might have been his commentaries on Heraclitus physics that influenced Stoic physics   Chrysippus of Soli(cicilia, asia minor;230bce as headmaster;205bce death):  third head of the Stoic school the great unifier, systematised the Stoic philosophy of its predecessors     middle(these started to inspire themselves from other philosophies):  Panaetius of Rhodes(185bce - 110bce;head of stoa in 128bce):  influenced Cicero influenced by Plato and Aristotle   Posidonius of Apamea(siria;135bce - 51bce):  Cicero was his pupil polymath contribuing to history, geography, astronomy, meteorology, biology and anthropology famous contributions in psychology     late(first hand sources are available):  these stoics lose interest in physics and logic and focus on practical ethics Seneca:  leters to St.</description>
    </item>
    
    <item>
      <title>Malware techniques RE</title>
      <link>https://www.dinudev.com/post/malware_techniques_re/</link>
      <pubDate>Sun, 16 Feb 2020 21:18:00 +0200</pubDate>
      
      <guid>https://www.dinudev.com/post/malware_techniques_re/</guid>
      <description>empire:  stagers:  backdoorLnkMacro:  backdoor .lnk on desktop that on click will attempt to download and run an empire agent structure:  xls file with data macro to be injected into the xls xml holds data about empire install        targetEXE = &amp;ldquo;iexplore,Firefox, CHROME &amp;quot; killDate = 02/22/2020
shellVar = &amp;lsquo;fwpjyHSAr&amp;rsquo; lnkVar = &amp;lsquo;bIzKAcPke&amp;rsquo; fsoVar = &amp;lsquo;fYvrDnMq&amp;rsquo; folderVar = &amp;lsquo;shwYkAlvB&amp;rsquo; fileVar = &amp;lsquo;WYuEVPGxH&amp;rsquo; encKey = &amp;lsquo;XAglS;^I_Yye@zam&amp;rsquo; envIV = 220</description>
    </item>
    
    <item>
      <title>CCNA</title>
      <link>https://www.dinudev.com/post/ccna/</link>
      <pubDate>Sun, 16 Feb 2020 15:33:00 +0200</pubDate>
      
      <guid>https://www.dinudev.com/post/ccna/</guid>
      <description>ch1 internetworking:  Chapter concepts  Infrastructure components:  firewalls access points wireless controllers   Networking topologies:  star mesh hybrid     What is an internetwork:  two or more networks connected via a router and configured with a logical network addressing scheme with a protocol such as ip or ipv6   network segmentation:  use switches to segment each sw interface into a separate collision domain hubs connect network segments routers break up a broadcast domain   network broadcast:  every device on the network must read and process the broadcast, unless its a router   collision domain:  a device sends a packet out on a network segment and every other device is forced to pay attention no matter what if two devices try to send packets at the same time, a collision occurs and they need to retransmit the packet sequentially   devices:  routers:  break up broadcast domains break up collision domains don&amp;rsquo;t forward broadcasts by default can filter the net based on layer 3(network layer) ip address(logical addressing) packet switching packet filtering:  via access lists   internetwork communication:  connect two or more networks together   path selection:  uses a routing table to map networks to paths   L3 switches provide connection between virtual lans(vlans) can provide quality of service(QOS) for specific types of network traffic it only cares where a network is located and how to get to it   switches:  forward and filter frames L2 switches optimize LAN performance does not break up domains by default switch frames from a port to another withing a switched network each port is a different collision domain in a switched network, you still need a router to provide communication between VLANS it only cares about uniquelly identifying a lan device   wlan device(wireless nic) access points:  extend a collision domain they are in their own broadcast domain(vlan)   firewalls:  controll incoming and outgoing net traffic they are usually an ips(intrusion protection system)     common lan traffic congestion reasons:  too many hosts in a collision or broadcast domain broadcast storms too much multicast traffic low bandwidth adding hubs for connectivity to the network a bunch of arp broadcasts    Communication modes:  simplex: one-way communication(say something and not get a reply) half-duplex: two-way communication(receiver has to wait for the sender to finish sending the message, then it can send a response back) full-duplex: two-way communication(devices receive and transmit at the same time)  Communication types:  connection-oriented:  caracteristics:  virtual circuit(three-way handshake) uses sequencing uses acknowledgments uses flow control   steps:  first establish a connection-oriented session with a &amp;ldquo;three-way handshake&amp;rdquo;:  segment from sender to receiver to request for synchronization(SYN) segment from receiver to sender to acknowledge(ACK) the request and establish connection parameters segment from sender to receiver to acknowledge(ACK) that the connection agreement has been accepted and the actual connection has been established   transfer data termination call that tears down the virtual circuit      Flow control: (provide a way for the receiver to control the amount of data sent by the sender)</description>
    </item>
    
    <item>
      <title>First Http Email - 1991</title>
      <link>https://www.dinudev.com/post/first_http_email_1991/</link>
      <pubDate>Thu, 13 Feb 2020 10:34:00 +0200</pubDate>
      
      <guid>https://www.dinudev.com/post/first_http_email_1991/</guid>
      <description>From: timbl@info .cern.ch (Tim Berners-Lee)Newsgroups: alt.hypertextSubject: Re: Qualifiers on Hypertext links...Message-ID: &amp;lt;6484@cernvax.cern.ch&amp;gt;Date: 6 Aug 91 14:56:20 GMTReferences: &amp;lt;1991Aug2.115241@ardor.enet.dec.com&amp;gt;Sender: news@cernvax.cern.chLines: 52 ` In article 1991Aug2.115241@ardor.enet.dec.com kannan@ardor.enet.dec.com (Nari
Kannan) writes:
 Is anyone reading this newsgroup aware of research or development efforts
in the following areas:
1. Hypertext links enabling retrieval from multiple heterogeneous sources   of
 information? The WorldWideWeb (WWW) project aims to allow links to be made to any information anywhere.</description>
    </item>
    
    <item>
      <title>HTTP 1.1 RFC - pt2</title>
      <link>https://www.dinudev.com/post/http7230/</link>
      <pubDate>Thu, 13 Feb 2020 10:32:00 +0200</pubDate>
      
      <guid>https://www.dinudev.com/post/http7230/</guid>
      <description>Internet Engineering Task Force (IETF) R. Fielding, Ed. Request for Comments: 7230 Adobe Obsoletes: 2145, 2616 J. Reschke, Ed. Updates: 2817, 2818 greenbytes Category: Standards Track June 2014 ISSN: 2070-1721
Hypertext Transfer Protocol (HTTP/1.1): Message Syntax and Routing
Abstract
The Hypertext Transfer Protocol (HTTP) is a stateless application- level protocol for distributed, collaborative, hypertext information systems. This document provides an overview of HTTP architecture and its associated terminology, defines the &amp;ldquo;http&amp;rdquo; and &amp;ldquo;https&amp;rdquo; Uniform Resource Identifier (URI) schemes, defines the HTTP/1.</description>
    </item>
    
    <item>
      <title>Cuckoo Sandbox Notes</title>
      <link>https://www.dinudev.com/post/cuckoo/</link>
      <pubDate>Tue, 11 Feb 2020 12:36:00 +0200</pubDate>
      
      <guid>https://www.dinudev.com/post/cuckoo/</guid>
      <description>Structure:  CWD is implemented so multiple configurations can work with the same cuckoo install logging is standard python2 logging:  INFO(all) DEBUG WARN   tries to rise soft a dir is created(&amp;ldquo;pidfiles&amp;rdquo;) that holds the pid with the id of the current cuckoo process (maybe an abstraction layer that merges win/linux process viewpoints?) check if curr version is up to date and warn if not check if dependencies have vulnerabilities/are out of date and warn  </description>
    </item>
    
    <item>
      <title>Malware Related Methodologies</title>
      <link>https://www.dinudev.com/post/malware_related_methodologies/</link>
      <pubDate>Mon, 10 Feb 2020 15:36:00 +0200</pubDate>
      
      <guid>https://www.dinudev.com/post/malware_related_methodologies/</guid>
      <description>Kill chain(structure of the attack):  target identification force dispatch to target,decision and order to attack the target destruction of the target  F2T2EA: (it&amp;rsquo;s a chain, because an interruption at any stage can interrupt the entire process)
 find: identify the target fix: fix the target&amp;rsquo;s location track: monitor the target&amp;rsquo;s movements target: select and appropiate weapon/asset based on the target engage: apply weapon/asset on target asses: evaluate the effects of the attack  Four F&amp;rsquo;s:  find the enemy: locate enemy fix the enemy: pin down with suppressing fire fight the enemy: engage in combat or flank finish the enemy: eliminate all the combatants  Unified kill chain:  initial foothold(compromised system):  reconnaissance weaponization delivery social engineering exploitation persistence defense evasion command &amp;amp; control pivoting   network propagation(internal network): 9.</description>
    </item>
    
    <item>
      <title>RE Labs</title>
      <link>https://www.dinudev.com/post/re_labs/</link>
      <pubDate>Fri, 31 Jan 2020 21:35:00 +0200</pubDate>
      
      <guid>https://www.dinudev.com/post/re_labs/</guid>
      <description>Lab1 analysis:  if dword_10026058 check if fdwReason dll_process_attach || dll_thread_attach call a function, if result is 0, return DllEntryPoint with 0 call after_checking_for_attach if result is 0 return process with DllEntryPoint with 0  </description>
    </item>
    
    <item>
      <title>Data Structures and Algorithms</title>
      <link>https://www.dinudev.com/post/dsa/</link>
      <pubDate>Wed, 08 Jan 2020 11:35:00 +0200</pubDate>
      
      <guid>https://www.dinudev.com/post/dsa/</guid>
      <description>Foundation:  what is an algorithm? why use an algorithm? categories  Algorithms:   searching:
 Binary search:  input: sorted list of elements guess the middle number and eliminate half the remaining numbers every time big o(list of n):  best avg worst: O(log n)   return position of element in list or null      sorting:
 selection sort:  big o:  worst: O(n^2) avg: O(n^2) best: O(n^2)     merge sort:  big o:  worst: O(n log n) avg: O(n log n) best: O(n log n)     Quicksort:  base case recursive case big o:  worst: O(n^2) avg: O(n log n) best: O(n log n)        Data structures:  primitives:  int float char   compound:  Array:  runtimes:  reading: O(1) insertion: O(n) deletion: O(n)   random access contigous spaces in memory to extend you have to find a bigger free space and copy the data there random access is easy, because they are contigous, to access item at index n, BASE + n(based on the fact that n is lower that BASE[MAX]) all elements must be of the same data type   Linked list:  runtimes:  reading: O(n) insertion: O(1) deletion: O(1)   deletion is O(1) only if you can access instantly the element sequential access each item holds a pointer to the next item in the list solves arrays problem of contigous memory allocation by randomly asigning one unit of space for every item in the list good if you want to access all the elements of the list at once if you want to access the last, you need to start from the first and go through every one, until you find the searched one   hash map:  model relations from one item to another an array that uses an hash function to store the values a hash function:  for every string value a different number is created for the same string the same number is created, no matter the ammount of calls knows the array size and returns valid indexes (n=array lengt, hash &amp;gt;= 0, hash &amp;lt; n - 1)   runtime:  worst:  insert: O(n) delete: O(n) read: O(n)   avg:  insert: O(1) delete: O(1) read: O(1)     collision solutions:  start a linked list at the index with multiple values   implement:  take into account the load factor:  items in htable/total slots in htable at &amp;gt;1 load factor the access time is O(n), multiple values with the same hash resize storage when lf is greater than 0.</description>
    </item>
    
    <item>
      <title>Writeup - Trickbot</title>
      <link>https://www.dinudev.com/post/writeup_trickbot/</link>
      <pubDate>Sun, 29 Dec 2019 21:56:00 +0200</pubDate>
      
      <guid>https://www.dinudev.com/post/writeup_trickbot/</guid>
      <description>Stages:   vba dropper in word document
  vba trick bot is executed:
 loads part of himself in heap and sets process to suspended    (enables it to modify before executing child):
 execute child and exit    first child execution:
 loads named resource(&amp;ldquo;IDR_X86BOT&amp;rdquo; || &amp;ldquo;IDR_X64BOT&amp;rdquo;) from himself(encrypted) in heap decrypts the data in heap call second child entrypoint    second child execution:</description>
    </item>
    
  </channel>
</rss>